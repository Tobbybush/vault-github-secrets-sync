name: Secrets from Vault

on:
  push:
    branches:
      - dev
  workflow_dispatch: # Allows manual trigger

jobs:
  update-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch Secrets from Vault
        env:
          VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
        run: |
          set -e
          export VAULT_SKIP_VERIFY=true  # Skip TLS verification
          
          VAULT_PATH="kvV2/data/Vault-POC/backend/dev"
          SECRET_FILE="vault_secrets.txt"

          echo "Fetching secrets from Vault: $VAULT_PATH"

          # Retrieve secrets using curl
          SECRET_JSON=$(curl --s -k --header "X-Vault-Token: $VAULT_TOKEN" --request GET "$VAULT_ADDR/v1/$VAULT_PATH")

          if [[ -z "$SECRET_JSON" || "$SECRET_JSON" == "null" ]]; then
            echo "Error: No data fetched from Vault."
            exit 1
          fi

          # Extract and format secrets
          echo "$SECRET_JSON" | jq -r '.data.data | to_entries | .[] | "\(.key)=\(.value)"' > "$SECRET_FILE"
          echo "Secrets saved to $SECRET_FILE"

      - name: List Retrieved Secrets
        run: cat vault_secrets.txt

      - name: Update GitHub Secret (B_DEV_SECRET)
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          set -e
          echo "Updating GitHub Secret: B_DEV_SECRET"
          gh auth status
          
          
        #   SECRET_VALUE=$(cat vault_secrets.txt | base64 -w 0)  # Encode to prevent formatting issues
        #   gh secret set B_DEV_SECRET --body "$SECRET_VALUE"
          
        #   echo "GitHub Secret B_DEV_SECRET updated successfully."
