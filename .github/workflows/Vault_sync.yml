name: Sync Secrets from Vault

on:
  push:
    branches:
      - dev
      - stage
  # schedule:
  #   - cron: "*/10 * * * *" # Runs every 10 minutes
  # workflow_dispatch: # Allows manual trigger
  workflow_dispatch:

jobs:
  sync-secrets:
    runs-on: ubuntu-latest
    env:
      VAULT_VERSION: "1.15.0"
      VAULT_ADDR: ${{ secrets.VAULT_ADDR }}
      VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
      GH_PAT: ${{ secrets.GH_PAT }}
      GITHUB_REPO: ${{ github.repository }}
      path: "kvV2/Vault-POC/backend/dev"

    steps:
    # Step 1: Get all secrets from Vault
    - name: Get secrets from Vault
      uses: hashicorp/vault-action@v2.4.1
      with:
        url: ${{ secrets.VAULT_ADDR }}
        token: ${{ secrets.VAULT_TOKEN }}
        path: "kvV2/Vault-POC/backend/dev"
              

    # Step 2: Print out the keys of the secrets to confirm what was retrieved (safe for debugging)
    - name: Print secrets keys
      run: |
        echo "Secrets retrieved from Vault: "
        echo "${{ steps.vault-secrets.outputs.secrets }}" | jq 'keys'  # Print out the keys of the secrets

    # Use jq to parse the JSON and format the output
    - name: parse the JSON and format 
      run: | 
        jq -r 'to_entries | .[] | if (.key | test("URL|password|path"; "i")) 
        then "\(.key)=\"\(.value)\"" 
        else "\(.key)=\(.value)" 
        end' "$INPUT_FILE" > github_secrets.txt
    
    # Step 4: Update GitHub Secrets
    - name: Update GitHub Secrets
      run: |
        echo "Updating GitHub Secrets..."
        while IFS= read -r line; do
          key=$(echo "$line" | cut -d '=' -f1)
          value=$(echo "$line" | cut -d '=' -f2-)
          echo "Updating secret: $key"
          gh secret set "$key" --body "$value"
        done < merged_secrets.env
        echo "GitHub Secrets updated successfully."

    # Step 3: Create a .env file
    - name: Create env file
      if: github.ref == 'refs/heads/frontend_dev'
      run: |
        echo "${{ steps.vault-secrets.outputs.secret }}" > .env

      
